<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" debug="false">
	<springProperty scope="context" name="log_dir" source="logging.file.path"/>
	<springProperty scope="context" name="log_level" source="logging.level"/>
	<property name="maxHistory" value="6" />
	
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${log_dir}/logback/%d{yyyy-MM-dd}/error-log.log</fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除-->
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
 
    <!-- ConsoleAppender 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对日志进行格式化 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger -%msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
 
    <appender name="HTML" class="ch.qos.logback.core.FileAppender">
    <!-- 过滤器，只记录WARN级别的日志 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>info</level>
        <onMatch>ACCEPT</onMatch>
        <onMismatch>DENY</onMismatch>
    </filter>
 
    <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
        <layout class="ch.qos.logback.classic.html.HTMLLayout">
            <pattern>%p%d%msg%M%F{32}%L</pattern>
        </layout>
        <charset>UTF-8</charset>
    </encoder>
    <file>${log_dir}/html/%d{yyyy-MM-dd}/error-log.html</file>
</appender>
 
<!-- 开发环境的日志，输出到控制台 -->
<springProfile name="dev">
	<!-- 日志输出级别 -->
    <root level="${log_level}">
        <appender-ref ref="STDOUT" />
    </root>
</springProfile>

<!-- 服务器的日志，输出到文件 -->
<springProfile name="prod">
	<!-- 日志输出级别 -->
    <root level="${log_level}">
        <appender-ref ref="FILE" />
<!--        <appender-ref ref="HTML" />-->
        <appender-ref ref="STDOUT" />
    </root>
</springProfile>
    
</configuration>